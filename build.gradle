plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'felt-spindle' version '0.2-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = "Felt"
		url = "https://repo.repsy.io/mvn/distant/feltmc/"
	}
	maven {
		name = "NeoForge"
		url = 'https://maven.neoforged.net/releases'
	}
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		name = 'ParchmentMC'
		url = 'https://maven.parchmentmc.org'
	}
	maven {
		url = "https://mvn.devos.one/snapshots/"
	}
	maven {
		url = "https://jitpack.io"
		content {
			includeGroup("com.github.Chocohead")
			includeGroup("com.github.thecatcore.CursedMixinExtensions")
		}
	}
}

gradle.projectsEvaluated {
	tasks.withType(JavaCompile) {
		options.compilerArgs << "-Xmaxerrs" << "1000"
	}
}

loom {
	accessWidenerPath = file("src/main/resources/feltforge.accesswidener")
}

spindle {
	accessTransformerPath = file("src/main/resources/META-INF/accesstransformer.cfg")
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        //parchment("org.parchmentmc.data:parchment-1.20.1:2023.06.26@zip")
    }
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.2.0-rc.4")))
	include(implementation(annotationProcessor("net.feltmc:feltasm-fabric:0.3.0")))
	include(implementation(annotationProcessor("com.github.thecatcore.CursedMixinExtensions:fabric:1.0.0")))
	//modImplementation "io.github.fabricators_of_create.Porting-Lib:Porting-Lib:2.1.1127+1.20"
	// THIS IS FOR ERROR CHECKING NONE OF THESE WILL WORK UNMODIFIED
	implementation("net.minecrell:terminalconsoleappender:1.3.0")
	implementation "net.neoforged.fancymodloader:core:47.1.47"
	implementation "net.neoforged.fancymodloader:loader:47.1.47"
	//implementation "net.neoforged.fancymodloader:loader:47.1.47"
	implementation "net.neoforged.fancymodloader:language-java:47.1.47"
	implementation "net.neoforged.fancymodloader:language-lowcode:47.1.47"
	implementation "net.neoforged.fancymodloader:language-minecraft:47.1.47"
	implementation "net.neoforged.fancymodloader:events:47.1.47"
	implementation "net.minecraftforge:eventbus:6.0.5"
	implementation "net.minecraftforge:forgespi:7.0.1"
	implementation "net.minecraftforge:mergetool:1.1.5:api"

	modRuntimeOnly "maven.modrinth:lithium:mc1.20.1-0.11.2"
	//modRuntimeOnly "maven.modrinth:sodium:mc1.20.1-0.5.0"
	modRuntimeOnly "maven.modrinth:modmenu:7.2.1"
	modRuntimeOnly "maven.modrinth:jei:15.2.0.23"
	modRuntimeOnly "maven.modrinth:modernfix:5.7.2+mc1.20.1"
	modRuntimeOnly "maven.modrinth:ferrite-core:6.0.0-fabric"

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
